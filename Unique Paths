Intuition
If we observe examples there is a similarity in paths from start to end. Each time we are taking an exactly m+n-2 number of steps to reach the end.

From start to reach the end we need a certain number of rightward directions and a certain number of downward directions. So we can figure out we need n-1 no. of rightward direction and m-1 no. of downward direction to reach the endpoint.

Since we need an m+n-2 number of steps to reach the end among those steps if we choose n-1 rightward direction or m-1 downward direction and calculate the combinations ( ie: m+n-2Cn-1 or m+n-2Cm-1) weâ€™ll get the total number of paths.

Approach
The approach of this solution is very simple just use a for loop to calculate the m+n-2Cn-1 or m+n-2Cm-1

Complexity
Time complexity:
The time complexity of this solution will be O(n-1) or O(m-1) depending on the formula we are using.

Space complexity:
As we are not using any extra space the space complexity of the solution will be O(1).

Code
class Solution {
public:
   int uniquePaths(int m, int n) {
       int N=m+n-2;
       double res=1;
       int r=m-1;
       for(int i=1;i<=r;i++)
       res=res*(N-r+i)/i;
       return res;}

    
};
